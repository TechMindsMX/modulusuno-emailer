def springVersion = '4.1.7.RELEASE'
def javassistVersion = '3.8.0.GA'
def hibernateValidatorVersion = '5.1.3.Final'
def jmsApiVersion = '1.1-rev-1'
def	groovyVersion = '2.4.4'
def springfoxVersion = '2.3.1'
def currentEnvironment = project.hasProperty("environment")?environment:"development"
def timoneConfigurationDir = "${System.getProperty('user.home')}/.emailer"

buildscript {
  repositories {
    jcenter()
  }
}

subprojects {
  apply plugin:'groovy'
  version = "0.0.1"
  group = "com.tim.one"

  repositories {
    mavenCentral()
  }
  dependencies {
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-all:1.10.19"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "org.spockframework:spock-spring:0.7-groovy-2.0"
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"
    compile "log4j:log4j:1.2.17"
    compile 'net.bull.javamelody:javamelody-core:1.53.0'
  }
}

project(":emailer:sender"){
  dependencies{
    compile "org.springframework.integration:spring-integration-mail:4.2.0.RELEASE"
    compile 'javax.mail:mail:1.4.7'
    compile "org.freemarker:freemarker:2.3.23"
  }
}

project(":emailer:formatter"){
  dependencies{
    compile "javax.servlet:servlet-api:2.5"
    compile "org.springframework:spring-orm:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework:spring-context-support:$springVersion"
    compile "org.springframework:spring-tx:$springVersion"
    compile "org.springframework:spring-expression:$springVersion"
    compile "org.springframework:spring-jms:$springVersion"
    compile "org.apache.commons:commons-lang3:3.0.1"
    compile "javax.mail:mail:1.4.1"
    compile "javax.jms:jms-api:$jmsApiVersion"
    compile "commons-io:commons-io:1.4"
    compile "javassist:javassist:$javassistVersion"
    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
    compile "org.apache.activemq:activemq-spring:5.12.0"
    testCompile "org.springframework:spring-test:$springVersion"
    compile project(":emailer:sender")
  }
}

project(":web"){
	apply plugin:"war"
  war.archiveName "timone.war"
	apply plugin:"jetty"
  httpPort=8082

  dependencies{
    compile "com.google.code.gson:gson:2.2.2"
    compile "commons-fileupload:commons-fileupload:1.2.2"
    compile "org.springframework.security.oauth:spring-security-oauth:2.0.3.RELEASE"
    compile "org.springframework:spring-aop:$springVersion"
    compile "org.aspectj:aspectjrt:1.8.2"
    compile "org.aspectj:aspectjweaver:1.8.2"
    compile 'org.jsoup:jsoup:1.8.1'
    compile "io.springfox:springfox-swagger2:${springfoxVersion}"
    compile "io.springfox:springfox-swagger-ui:${springfoxVersion}"
		providedCompile "javax.servlet:jstl:1.2"
    compile project(":emailer:formatter")
	}

	println "Setting environment to: ${currentEnvironment}"

	def filesToInclude = ["*-${currentEnvironment}.properties"]
	def toDirectory = 'src/main/resources/config'
	task settingEnvironment(type:Copy) {
		from timoneConfigurationDir
		into toDirectory
		include filesToInclude
		rename { String fileName -> fileName.replace("-${currentEnvironment}", '') }
	}

  task settingLog4jProperties(type:Copy){
    from "${System.getProperty('user.home')}/.emailer/log4j-${currentEnvironment}.properties"
    into "src/main/resources/"
		rename { String fileName -> fileName.replace("-${currentEnvironment}", '') }
  }

  processResources.dependsOn "settingEnvironment","settingLog4jProperties"
}
